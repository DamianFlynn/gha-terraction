---
name: "üß≥ Build Main Definition"

on:
  workflow_call:
    inputs:
      repo-token:
        required: true
        type: string
        description: "The GitHub token to use for the run"
    secrets:
      AZURE_AD_CLIENT_ID:
        required: true
      AZURE_AD_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_AD_TENANT_ID:
        required: true
      INFRACOST_API_KEY:
        required: true
      TERRAFORM_PLAN_STORAGE_CONNECTION:
        required: true
        description: "The Azure Storage Account to use for the Terraform Plan"

jobs:

  call-bot:
    name: "ü§ñ BOT's"
    if: ${{ github.event_name == 'issue_comment' }}
    # if: ${{ github.event.issue.pull_request && contains(github.event.comment.html_url, '/pull/')  }}
    uses: ./.github/workflows/terraform-bots.yml
    secrets:
      AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID}}
      AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TERRAFORM_PLAN_STORAGE_CONNECTION: ${{ secrets.TERRAFORM_PLAN_STORAGE_CONNECTION }}
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
    with:
      repo-token: ${{ github.token }}

  plan-terraform:
    name: "üóìÔ∏è Refresh Terraform Plan"
    if: ${{ github.event_name == 'pull_request' }} # TODO: Add file for **/*.tf and **/*.tfvars
    uses: ./.github/workflows/terraform-plan.yml
    secrets:
      AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID}}
      AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TERRAFORM_PLAN_STORAGE_CONNECTION: ${{ secrets.TERRAFORM_PLAN_STORAGE_CONNECTION }}
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
    with:
      repo-token: ${{ github.token }}
