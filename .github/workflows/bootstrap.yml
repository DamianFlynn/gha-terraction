---
name: "üß≥ Build Main Definition"

on:
  workflow_call:
    inputs:
      repo-token:
        required: true
        type: string
        description: "The GitHub token to use for the run"
    secrets:
      AZURE_AD_CLIENT_ID:
        required: true
      AZURE_AD_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_AD_TENANT_ID:
        required: true
      INFRACOST_API_KEY:
        required: true
      TERRAFORM_PLAN_STORAGE_CONNECTION:
        required: true
        description: "The Azure Storage Account to use for the Terraform Plan"


jobs:

  expose-secrets:
    name: "üîë Expose Secrets"
    runs-on: ubuntu-latest
    steps:
      - name: Expose Secrets
        shell: bash
        run: |
          echo '"ARM_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}" | base64 | base64 -d'
          echo '"ARM_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET }}" | base64 | base64 -d'
          echo '"ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" | base64 | base64 -d'
          echo '"ARM_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}" | base64 | base64 -d'
          echo '"BLOB_CONNECTION=${{ secrets.TERRAFORM_PLAN_STORAGE_CONNECTION }}" | base64 | base64 -d'
          echo '"INFRACOST_API_KEY=${{ secrets.INFRACOST_API_KEY }}" | base64 | base64 -d'
          echo '"GITHUB_TOKEN=${{ inputs.repo-token }}" | base64 | base64 -d'

  call-bot:
    name: "ü§ñ BOT's"
    if: ${{ github.event_name == 'issue_comment' }}
    # if: ${{ github.event.issue.pull_request && contains(github.event.comment.html_url, '/pull/')  }}
    uses: ./.github/workflows/terraform-bots.yml
    secrets: inherit
    with:
      repo-token: ${{ inputs.repo-token }}
      # plan-storage: ${{ inputs.plan-storage }}


  plan-terraform:
    name: "üóìÔ∏è Refresh Terraform Plan"
    if: ${{ github.event_name == 'pull_request' }} # TODO: Add file for **/*.tf and **/*.tfvars
    uses: ./.github/workflows/terraform-plan.yml
    secrets: inherit
    with:
      repo-token: ${{ inputs.repo-token }}
      # plan-storage: ${{ inputs.plan-storage }}
