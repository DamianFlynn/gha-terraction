---
name: "üß≥ BOT Activities"

on:
  workflow_call:
    inputs:
      repo-token:
        required: true
        type: string
        description: "The GitHub token to use for the run"
    secrets:
      AZURE_AD_TENANT_ID:
        required: true
        description: "The Tenant ID in which the Subscription exists."
      AZURE_AD_CLIENT_ID:
        required: true
        description: "The Client ID of the Service Principal used by Terraform."
      AZURE_AD_CLIENT_SECRET:
        required: true
        description: "The Client Secret of the Service Principal."
      AZURE_SUBSCRIPTION_ID:
        required: true
        description: "The Subscription ID in which the Terraform state storage account exists."
      INFRACOST_API_KEY:
        required: true
        description: "The Infracost API key for calculating cost impact of the Terraform plan."
      TERRAFORM_PLAN_STORAGE_CONNECTION:
        required: true
        description: "A connection string to a storage account to use for the Terraform Plan."

jobs:
  bot-debug:
    name: "ü§ñ Debugging BOT"
    if: ${{ github.event_name == 'issue_comment' && contains(github.event.comment.body, '/debug') }}
    uses: ./.github/workflows/debug-github-environment.yml
    secrets:
      AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID}}
      AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
      TERRAFORM_PLAN_STORAGE_CONNECTION: ${{ secrets.TERRAFORM_PLAN_STORAGE_CONNECTION }}
    with:
      repo-token: ${{ inputs.repo-token }}

  bot-terraform-apply:
    name: "üèóÔ∏è Deploy Request"
    if: ${{ github.event_name == 'issue_comment' && contains(github.event.comment.body, '/deploy') }}
    uses: ./.github/workflows/terraform-bot-apply.yml
    secrets:
      AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID}}
      AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TERRAFORM_PLAN_STORAGE_CONNECTION: ${{ secrets.TERRAFORM_PLAN_STORAGE_CONNECTION }}
    with:
      repo-token: ${{ inputs.repo-token }}

  bot-terraform-scan:
    name: "üëÆ Security Review Request"
    if: ${{ github.event_name == 'issue_comment' && contains(github.event.comment.body, '/scan') }}
    uses: ./.github/workflows/terraform-bot-security.yml
    secrets:
      AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID}}
      AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TERRAFORM_PLAN_STORAGE_CONNECTION: ${{ secrets.TERRAFORM_PLAN_STORAGE_CONNECTION }}
    with:
      repo-token: ${{ inputs.repo-token }}
